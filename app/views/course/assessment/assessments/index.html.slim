= page_header format_inline_text(@category.title) do
  - if can?(:create, Course::Assessment.new(tab: @tab))
    div.pull-right
      div.new-btn data="#{{ gamified: current_course.gamified?, tab_id: @tab.id, category_id: @category.id }.to_json}"

= display_assessment_tabs

table.table.assessments-list.table-hover
  thead
    tr
      th = t('.title')
      th
      - if current_course.gamified?
        th.table-base-exp = Course::LessonPlan::Item.human_attribute_name(:base_exp)
      - if show_bonus_attributes?
        th.table-time-bonus-exp = Course::LessonPlan::Item.human_attribute_name(:time_bonus_exp)
      - unless current_component_host[:course_achievements_component].nil?
        th.table-requirement-for = t('.requirement_for')
      th.table-start-at = t('.start_at')
      - if show_bonus_attributes?
        th.table-bonus-cut-off = t('.bonus_cut_off')
      - if show_end_at?
        th.table-end-at = t('.end_at')
      th
      th
  tbody
    = render partial: 'assessment', collection: @assessments,
             locals: { items: @items_with_all_times }
